> $\star$ We are given $n$ points in the unit circle, $p_i = (x_i, y_i)$, such
> that $0 < x_i^2 + y_i^2 \le 1$ for $i = 1, 2, \ldots, n$. Suppose that the
> points are uniformly distributed; that is, the probability of finding a point
> in any region of the circle is proportional to the area of that region.
> Design an algorithm with an average-case running time of $\Theta(n)$ to sort
> the $n$ points by their distances $d_i = \sqrt{x_i^2 + y_i^2}$ from the
> origin. (<i>Hint:</i> Design the bucket sizes in `BUCKET-SORT` to reflect the
> uniform distribution of the points in the unit circle.)

The unit circle has area $\pi 1^2 = \pi$. We can divide it into $n$ concentric rings,
each having area $\pi / n$. The radius of such a ring is $\pi(b^2 - a^2)$,
where $b$ is the radius of the outer edge and $a$ is the radius of the inner
edge of the ring.

We look at the $k$th ring, defined by outer radius $d_{k}$ and inner radius $d_{k - 1}$.
Since we're dividing the circle into concentric rings, there are $k - 1$ rings, each with
area $\frac{1}{n}$, contained within the inner radius. So this means our outer radius
defines a disc of area $\frac{k}{n}\pi$ and the inner radius defines one of area $\frac{k - 1}{n}\pi$.
So what we have is

$$\frac{1}{n}\pi = \frac{k}{n}\pi - \frac{k - 1}{n}\pi = \pi d_{k}^2 - \pi d_{k - 1}^2$$.
 
All we need to do is solve for $d_{k}$ in $\pi d_{k}^2 = \frac{k}{n}\pi$ for general $k$.
Fortunately, this is pretty straightforward:

$\pi d_{k}^2 = \frac{k}{n}\pi \rightarrow d_{k}^2 = \frac{k}{n} \rightarrow d_{k} = \sqrt{\frac{k}{n}}$.

Verifying what we've just done, we have

$\pi d_{k}^2 - \pi d_{k - 1}^2 = \pi (\sqrt{\frac{k}{n}})^2 - \pi (\sqrt{\frac{k - 1}{n}})^2 
   = \pi \frac{k}{n} - \pi \frac{k - 1}{n} = \pi \frac{1}{n}$

Thus, we create buckets for the following intervals:

$$ \bigg[0, \frac{1}{\sqrt n} \bigg),
   \bigg[\frac{1}{\sqrt n}, \frac{\sqrt 2}{\sqrt n}\bigg) \cdots
   \bigg[\frac{\sqrt{n-1}}{\sqrt n}, 1 \bigg] $$

And distribute elements according to their distance. To calculate the bucket
$k$ for a distance $d$ in constant time, just take:

$$ k = \begin{cases}
    \lfloor d^2n \rfloor + 1 & \text{if } d < 1, \\\\
    n & \text{id } d = 1
  \end{cases} $$

...for 1-based buckets.

> Consider an $m \times n$ matrix in row-major order, where both $m$ and $n$ are
> powers of $2$ and rows and columns are indexed from 0. We can represent a row
> index $i$ in binary by the $\lg m$ bits $\langle i_{\lg{m-1}}, i_{\lg{m-2}},
> \ldots, i_0 \rangle$ and a column index $j$ in binary by the $\lg n$ bits
> $\langle j_{\lg{n-1}}, j_{\lg{n-2}}, \ldots, j_{\lg{0}} \rangle$. Suppose that
> this matrix is a $2 \times 2$ block matrix, where each block has $m/2$ rows
> and $n/2$ columns, and it is to be represented by a single array with
> $0$-origin indexing. Show how to construct the binary representation of the
> $(\lg m + \lg n)$-bit index into the single array from the binary
> representation of $i$ and $j$.

Picking some simple numbers, if it was just stored as a one dimensional array,
and assuming a $i = j = 4$, it would be:

$$ \langle i_3, i_2, i_1, i_0, j_3, j_2, j_1, j_0 \rangle $$

When it turns into a $2 \times 2$ block, the final two bits need to be adjusted.

$$ \langle i_3, i_2, i_1, j_3, j_2, j_1, i_0, j_0 \rangle $$

When each block is $m/2 \times n/2$, the answer is probably that the bits should
be interspersed.

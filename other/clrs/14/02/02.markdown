> Give a recursive algorithm `MATRIX-CHAIN-MULTIPLY(A, s, i, j)` that actually
> performs the optimal matrix-chain multiplication given the sequence of
> matrices $\langle A_1, A_2, \ldots, A_n \rangle$, the $s$ table computed by
> `MATRIX-CHAIN-ORDER`, and the indices $i$ and $j$. (The initial call is
> `MATRIX-CHAIN-MULTIPLY(A, s, 1, n)`.) Assume that the call
> `RECTANGULAR-MATRIX-MULTIPLY(A, B)` returns the product of matrices `A` and
> `B`.

Ugh.

    MATRIX-CHAIN-MULTIPLY(A, s, i, j):
      if i == j:
        return A[i]

      k = s[i, j]

      return RECTANGULAR-MATRIX-MULTIPLY(
        MATRIX-CHAIN-MULTIPLY(A, s, i, k),
        MATRIX-CHAIN-MULTIPLY(A, s, k+1, j)
      )

Or something like that.

> Write pseudocode for the procedure `CONSTRUCT-OPTIMAL-BST(root)` which, given
> the table $root$, outputs the structure of an optimal binary search tree. For
> the example in Figure 15.10, your procedure should print the structure
>
> * $k_2$ is the root
> * $k_1$ is the left child of $k_2$
> * $d_0$ is the left child of $k_1$
> * $d_1$ is the right child of $k_1$
> * $k_5$ is the right child of $k_2$
> * $k_4$ is the left child of $k_5$
> * $k_3$ is the left child of $k_4$
> * $d_2$ is the left child of $k_3$
> * $d_3$ is the right child of $k_3$
> * $d_4$ is the right child of $k_4$
> * $d_5$ is the right child of $k_5$
>
> corresponding to the optimal binary search tree shown in Figure 15.9(b).

This problem is not very compatible with my brain. The code is a bit messy, but
it is what it is.

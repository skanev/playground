## Signing free-agent baseball players

> Suppose that you are the general manager for a major-league baseball team.
> During the off-season, you need to sign some free-agent players for your team.
> The team owner has given you a budget of $\$X$ to spend on free agents. You
> are allowed to spend less that $\$X$, but the owner will fire you if you spend
> any more than $\$X$.
>
> You are considering $N$ different positions, and for each position, $P$
> free-agent players who play that position are available. Because you do not
> want to overload your roster with too many players at any position, for each
> position you may sign at most one free agent who plays that position. (If you
> do not sign any players at a particular position, then you plan to stick with
> the players you already have at that position.)
>
> To determine how valuable a player is going to be, you decide to use a
> saber-metric statistic known as "WAR," or "wins above replacement." A player
> with a higher WAR is more valuable than a player with a lower WAR. It is not
> necessarily more expensive to sign a player with a higher WAR than a player
> with a lower WAR, because factors other than a player's value determine how
> much it costs to sign them.
>
> For each available free-agent player $p$, you have three pieces of
> information:
>
> * the player's position
> * $p.cost$, the amount of money it costs to sign the player, and
> * $p.war$, the player's WAR.
>
> Devise an algorithm that maximizes the total WAR of the players you sign while
> spending no more than $\$X$. You may assume that each player signs for a
> multiple of $\$100,000$. Your algorithm should output the total WAR of the
> players you sign, the total amount of money you spend, and a list of which
> players you sign. Analyze the running time and space requirements of your
> algorithm.

**(UNSOLVED)**

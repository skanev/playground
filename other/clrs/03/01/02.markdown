> Using reasoning to what we used for insertion sort, analyze the running time
> of the selection sort algorithm from Exercise 2.2-2

It's similar, but in reverse.

We can split the array into three parts - $X = A[1:n/3]$, $Y = A[n/3+1:2n/3]$
and $Z = A[2n/3+1:n]$ and put the smallest $n/3$ elements into $Z$.
`SELECTION-SORT` will have to move each one over $Y$, so that will be $n/3$
elements, each moved at least $n/3$ for a total of $\Omega(n^2)$ operations.
